name: Deploy to Staging

# Only one workflow in a concurrency group may run at a time
concurrency:
  group: staging-concurrency
  cancel-in-progress: true

on:
  release:
    types: [published]

jobs:
  trigger-github-deployment:
    name: Trigger GitHub Deployment
    environment: Staging
    steps:
      - name: Empty Step
        run: echo "Hello World"

  run_migrations:
    name: Update database in Staging
    needs: trigger-github-deployment
    uses: ./.github/workflows/runMigrations.yml
    with:
      PullRequestCheckout: false
      Environment: Staging
    secrets:
      ClientId: ${{secrets.CLIENTID}}
      ClientSecret: ${{secrets.CLIENTSECRET}}

  build-and-push-release-to-dev:
    name: Update containers in dev with version tag
    needs: trigger-github-deployment
    strategy:
      matrix:
        component: [broker, backend, frontend]
    uses: ./.github/workflows/publish_component.yml
    with:
      ComponentName: ${{ matrix.component }}
      Registry: ghcr.io
      ImageName: ${{ github.repository }}
      Tag: ${{ github.event.release.tag_name }}
    secrets:
      RegistryUsername: ${{ github.actor }}
      RegistryPassword: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-components:
    name: Build and push containers to auroraprodcr for Staging/Production
    needs: [trigger-github-deployment, build-and-push-components]
    strategy:
      matrix:
        component: [broker, backend, frontend]
    uses: ./.github/workflows/publish_component.yml
    with:
      ComponentName: ${{ matrix.component }}
      Registry: auroraprodacr.azurecr.io
      ImageName: robotics/flotilla
      Tag: ${{ github.event.release.tag_name }}
    secrets:
      RegistryUsername: ${{ secrets.ROBOTICS_ACRPUSH_DOCKER_APPLICATION_ID }}
      RegistryPassword: ${{ secrets.ROBOTICS_ACRPUSH_DOCKER_SECRET }}

  deploy:
    name: Update deployment in Staging
    needs: [trigger-github-deployment, build-and-push-components]
    uses: ./.github/workflows/update_aurora_deployment.yml
    with:
      Environment: staging
      Registry: auroraprodacr.azurecr.io
      ImageName: robotics/flotilla
      Tag: ${{ github.event.release.tag_name }}
      AuthorName: ${{ github.event.release.author.login }}
    secrets:
      DeployKey: ${{ secrets.ROBOTICS_INFRASTRUCTURE_DEPLOY_KEY }}
