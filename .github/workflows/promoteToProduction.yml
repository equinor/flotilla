name: Promote release in Staging to Production

on:
  workflow_dispatch:

env:
  REGISTRY: auroraprodacr.azurecr.io
  IMAGE_NAME: robotics/flotilla

jobs:
  get_staging_version:
    outputs:
      versionTag: ${{ steps.get_version_tag.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure
        uses: actions/checkout@v3
        with:
          ref: main
          repository: equinor/robotics-infrastructure
          ssh-key: ${{ secrets.ROBOTICS_INFRASTRUCTURE_DEPLOY_KEY }}

      - name: Get Flotilla version in staging
        id: get_version_tag
        run: |
          COMPONENT=frontend
          TAG_LINE_NUMBER=$(($(grep -n "${{ inputs.Registry }}/${{ inputs.ImageName }}-${COMPONENT}" k8s_kustomize/overlays/staging/kustomization.yaml |  cut --delimiter=":" --fields=1)+1))
          VERSION_TAG=$(sed -n "${TAG_LINE_NUMBER}p" k8s_kustomize/overlays/staging/kustomization.yaml  |  cut --delimiter=":" --fields=2)
          echo "tag=$VERSION_TAG" >> "$GITHUB_OUTPUT"

  run_migrations:
    needs: get_staging_version
    uses: ./.github/workflows/runMigrations.yml
    with:
      PullRequestCheckout: false
      Environment: Production
      CheckoutRef: ${{ needs.get_staging_version.outputs.versionTag }}
    secrets:
      ClientId: ${{secrets.CLIENTID}}
      ClientSecret: ${{secrets.CLIENTSECRET}}

  deploy:
    needs: get_staging_version
    uses: Update deployment in Production
    with:
      Environment: production
      Registry: ${{ env.REGISTRY }}
      Tag: ${{ needs.get_staging_version.outputs.versionTag }}
      ImageName: ${{ env.IMAGE_NAME }}
      AuthorEmail: ${{ github.event.sender.email }}
      AuthorName: ${{ github.event.sender.name }}
